<?php
include_once("inc.php");
global $gconf;
if ($argc < 2 || $argc >4) {
    echo "usage: main.php MODE [STDATE] [EDATE]\n";
    echo " MODE = all 或者 ( dump,preload,prestat,stat,load,postload,stattrade,paytrade,refundtrade,cityday,cpsstat ) 这几个值的组合,逗号分隔\n";
    echo " STDATE = 统计中使用数据的基准日期\n";
    echo " EDATE = 多天运行统计中使用数据的结束基准日期\n";
    echo " $argc\n";
    exit(1);
}

if ($argv[1] == "all") {
    $mode = array("dump","preload","prestat","stat","load","postload","stattrade","paytrade","refundtrade","cityday","cpsstat");
} else {
    $mode = explode(',',$argv[1]);
}
if (!isset($argv[2]) || $argv[2] == "yesterday") {
    $sttime = strtotime(date('Y-m-d',time()-86400));
} else if ($argv[2] == "today") {
    $sttime = strtotime(date('Y-m-d'));
} else {
    $sttime = strtotime($argv[2]);
}
$etime= isset($argv[3]) ? strtotime($argv[3]) : $sttime;

foreach ($mode as $step) {
    $func="func$step";
    $func($sttime,$etime);
    glog("done $func\n");
}
function funcdump($sttime,$etime) {
    global $gconf;
    $sumCode = 0;
    for($t=$sttime;$t<=$etime;$t+=86400) {
        $stdate = date('Y-m-d',$t);
        $cmdArr = array();
        foreach ( array("logs","thinklasho","activity","app") as $s ) {
            $cmdArr []= "bash -x dump_${s}_tables.sh $stdate";
        }
        glog("dump:begin $stdate");
        $ret = gprun($cmdArr);
        foreach ($ret as $r) {
            $sumCode += $r['retcode'];
            if ($r['retcode']>0) {
                glog(sprintf("dump:ret = %s cmd = %s",$r['retcode'],$r['cmd'])); 
                glog($r['output']);
            }
        }
        glog("dump:end $stdate");
    }
    if ($sumCode>0) {
        glog("something went wrong");
    } else {
        glog("dump done ".date('Y-m-d',$sttime)."  ".date('Y-m-d',$etime));
    }

}
function funcpreload($sttime,$etime) {
    //加载数据时要写mysql数据目录
    //只在一个mysql导入比较好
    $sumCode = 0;
    for($t=$sttime;$t<=$etime;$t+=86400) {
        $stdate = date('Y-m-d',$t);
        $out = array();
        glog("preload:begin $stdate");
        exec("bash -x preload.sh $stdate 2>&1",$out,$ret);
        glog("preload:end $stdate");
        $sumCode += $ret;
        if ($ret >0) {
            glog("preload:bash preload.sh $stdate ret=$ret out=".print_r($out,true));
        }
    }
    if ($sumCode>0) {
        glog("something went wrong");
    } else {
        glog("preload done ".date('Y-m-d',$sttime)."  ".date('Y-m-d',$etime));
        //留点时间给mfs
        sleep (15);
    }
}
function funcprestat($sttime,$etime) {
    global $gconf;
    $cmdArr = array();
    $sumCode = 0;
    for($t=$sttime;$t<=$etime;$t+=86400) {
        $stdate = date('Y-m-d',$t);
        $cmdArr []= "bash -x get_bad_client_key.sh $stdate $stdate";
    }
    glog("prestat:begin $sttime $etime");
    $ret = gprun($cmdArr,2);
    glog("prestat:end $sttime $etime");
    foreach ($ret as $r) {
        $sumCode += $r['retcode'];
        if ($r['retcode']>0) {
            glog(sprintf("prestat:ret = %s cmd = %s",$r['retcode'],$r['cmd']));
            glog($r['output']);
        }
    }

    $cmdArr = array();
    $php = $gconf['PHP_BIN'];
    for($t=$sttime;$t<=$etime;$t+=86400) {
        $stdate = date('Y-m-d',$t);
        $cmdArr []= "$php daily_uv.php  $stdate";
    }
    glog("prestat:begin uv $sttime $etime");
    $ret = gprun($cmdArr,1);
    glog("prestat:end uv $sttime $etime");
    foreach ($ret as $r) {
        $sumCode += $r['retcode'];
        if ($r['retcode']>0) {
            glog(sprintf("prestat: uv ret = %s cmd = %s",$r['retcode'],$r['cmd']));
            glog($r['output']);
        }
    }

    if ($sumCode>0) {
        glog("something went wrong");
    } else {
        glog("prestat done ".date('Y-m-d',$sttime)."  ".date('Y-m-d',$etime));
    }
}
function funcstat($sttime,$etime) {
    global $gconf;
    $cmdArr = array();
    $sumCode = 0;
    $php = $gconf['PHP_BIN'];
    for($t=$sttime;$t<=$etime;$t+=86400) {
        $stdate = date('Y-m-d',$t);
        $cmdArr []= "$php sort_session.php  $stdate";
    }
    glog("stat:begin  $sttime $etime");
    $ret = gprun($cmdArr,1);
    $charMap = str_split('0123456789abcdefghijklmnopqrstuv');
    $logroot = $gconf['LOG_PATH'];
    $logcolumn="id,visit_time,ip,city_id,client_key,session_id,user_id,source,ref,url,browser,pos";
    for($t=$sttime;$t<=$etime;$t+=86400) {
        $stdate = date('Y-m-d',$t);
        $stdateShort = date('Ymd',$t);
        $yesterday = date('Ymd',$t-86400);
        $yesterdayPath = date('Y/Ym',$t-86400);
        $today = date('Ymd',$t);
        $todayPath = date('Y/Ym',$t);
        $cmdArr = array();
        for($i=0;$i<count($charMap);$i++) {
            $cmd = "$php one_block.php '$logcolumn' channel_sitemap url_type_php $logroot/stat_www_visit_log/$yesterdayPath/stat_www_visit_log_${yesterday}_${charMap[$i]}.gz ";
            $cmd .= " 0<$logroot/stat_www_visit_log/$todayPath/pre_sort_go_visit_log_${stdateShort}_${charMap[$i]} ";
            $cmd .= " 2>/dev/null ";
            $cmd .= "|gzip -c >$logroot/stat_www_visit_log/$todayPath/stat_www_visit_log_${today}_${charMap[$i]}.gz";
            $cmd .= " 2>/dev/null";
            $cmdArr []= $cmd ;
        }
        $ret = gprun($cmdArr,2);
        $sumCode = 0;
        foreach ($ret as $r) {
            $sumCode += $r['retcode'];
            if ($r['retcode']>0) {
                glog(sprintf("stat:one_block ret = %s cmd = %s",$r['retcode'],$r['cmd']));
                glog($r['output']);
            }
        }
        system("rm -f $logroot/stat_www_visit_log/$todayPath/pre_sort_go_visit_log_${today}_*");
    }
    glog("stat:end  $sttime $etime");
    foreach ($ret as $r) {
        $sumCode += $r['retcode'];
        if ($r['retcode']>0) {
            glog(sprintf("stat:ret = %s cmd = %s",$r['retcode'],$r['cmd']));
            glog($r['output']);
        }
    }
    if ($sumCode>0) {
        glog("something went wrong");
    } else {
        glog("stat done ".date('Y-m-d',$sttime)."  ".date('Y-m-d',$etime));
    }
}

function funcload($sttime,$etime) {
    global $gconf;
    $cmdArr = array();
    $sumCode = 0;
    $php = $gconf['PHP_BIN'];
    for($t=$sttime;$t<=$etime;$t+=86400) {
        $stdate = date('Y-m-d',$t);
        $cmdArr []= "$php loader.php stat_www_visit_log day $stdate $stdate";
    }
    glog("load:begin  $sttime $etime");
    $ret = gprun($cmdArr,1);
    glog("load:end  $sttime $etime");
    foreach ($ret as $r) {
        $sumCode += $r['retcode'];
        if ($r['retcode']>0) {
            glog(sprintf("load:ret = %s cmd = %s",$r['retcode'],$r['cmd']));
            glog($r['output']);
        }
    }
    if ($sumCode>0) {
        glog("something went wrong");
    } else {
        glog("load done ".date('Y-m-d',$sttime)."  ".date('Y-m-d',$etime));
    }
}

function funcpostload($sttime,$etime) {
    global $gconf;
    $cmdArr = array();
    $sumCode = 0;
    $php = $gconf['PHP_BIN'];
    $stdate = date('Y-m-d',$sttime-14*86400);
    $edate = date('Y-m-d',$etime);
    foreach (array("go_buy","go_goods","go_sp","go_order","go_visit_trade_no","reg_user","user_reg_session","spe_activity") as $table) { 
        $cmdArr []= "$php loader.php $table all $stdate $edate";
    }
    glog("postload:begin  $sttime $etime");
    $ret = gprun($cmdArr,1);
    glog("postload:end  $sttime $etime");
    foreach ($ret as $r) {
        $sumCode += $r['retcode'];
        if ($r['retcode']>0) {
            glog(sprintf("load:ret = %s cmd = %s",$r['retcode'],$r['cmd']));
            glog($r['output']);
        }
    }
    if ($sumCode>0) {
        glog("something went wrong");
    } else {
        glog("postload done ".date('Y-m-d',$sttime)."  ".date('Y-m-d',$etime));
    }
}

function funcstattrade($sttime,$etime){
    global $gconf;
    $php = $gconf['PHP_BIN'];
    $sumCode = 0;
    $cmdArr = array();

    for($i=$sttime;$i<=$etime;$i=$i+86400){
        $stdate = date('Y-m-d',$i);
        $cmdArr []= "$php stat_trade.php $stdate";
    }
    glog("stattrade:begin $sttime $etime");
    $ret = gprun($cmdArr,1);
    glog("stattrade:end $sttime $etime");
    foreach ($ret as $r) {
        $sumCode += $r['retcode'];
        if ($r['retcode']>0) {
            glog(sprintf(":ret = %s cmd = %s",$r['retcode'],$r['cmd']));
            glog($r['output']);
        }
    }
    if ($sumCode>0) {
        glog("something went wrong");
    } else {
        glog("stattrade done ".date('Y-m-d',$sttime)."  ".date('Y-m-d',$etime));
    }
}

function funcpaytrade($sttime,$etime){
    global $gconf;
    $php = $gconf['PHP_BIN'];
    $sumCode = 0;
    $cmdArr = array();

    for($i=$sttime;$i<=$etime;$i=$i+86400){
        $stdate = date('Y-m-d',$i);
        $cmdArr []= "$php stat_pay_trade.php $stdate";
    }
    glog("paytrade:begin $sttime $etime");
    $ret = gprun($cmdArr,1);
    glog("paytrade:end $sttime $etime");
    foreach ($ret as $r) {
        $sumCode += $r['retcode'];
        if ($r['retcode']>0) {
            glog(sprintf(":ret = %s cmd = %s",$r['retcode'],$r['cmd']));
            glog($r['output']);
        }
    }
    if ($sumCode>0) {
        glog("something went wrong");
    } else {
        glog("paytrade done ".date('Y-m-d',$sttime)."  ".date('Y-m-d',$etime));
    }
}

//退款信息，需要当天之前的所有的trade任务完成之后运行
function funcrefundtrade($sttime,$etime){
    global $gconf;
    $php = $gconf['PHP_BIN'];
    $sumCode = 0;
    $cmdArr = array();

    for($i=$sttime;$i<=$etime;$i=$i+86400){
        $stdate = date('Y-m-d',$i);
        $cmdArr []= "$php stat_refund_trade.php $stdate";
    }
    glog("refundtrade:begin $sttime $etime");
    $ret = gprun($cmdArr,1);
    glog("refundtrade:end $sttime $etime");
    foreach ($ret as $r) {
        $sumCode += $r['retcode'];
        if ($r['retcode']>0) {
            glog(sprintf(":ret = %s cmd = %s",$r['retcode'],$r['cmd']));
            glog($r['output']);
        }
    }
    if ($sumCode>0) {
        glog("something went wrong");
    } else {
        glog("refundtrade done ".date('Y-m-d',$sttime)."  ".date('Y-m-d',$etime));
    }
}

function funccityday($sttime,$etime){
    global $gconf;
    $php = $gconf['PHP_BIN'];
    $sumCode = 0;
    $cmdArr = array();

    for($i=$sttime;$i<=$etime;$i=$i+86400){
        $stdate = date('Y-m-d',$i);
        $cmdArr []= "$php stat_city_day.php $stdate";
    }
    glog("cityday:begin $sttime $etime");
    $ret = gprun($cmdArr,1);
    glog("cityday:end $sttime $etime");
    foreach ($ret as $r) {
        $sumCode += $r['retcode'];
        if ($r['retcode']>0) {
            glog(sprintf(":ret = %s cmd = %s",$r['retcode'],$r['cmd']));
            glog($r['output']);
        }
    }
    if ($sumCode>0) {
        glog("something went wrong");
    } else {
        glog("cityday done ".date('Y-m-d',$sttime)."  ".date('Y-m-d',$etime));
    }
}

function funccpsstat($sttime,$etime){
    global $gconf;
    $php = $gconf['PHP_BIN'];
    $sumCode = 0;
    $cmdArr = array();

    for($i=$sttime;$i<=$etime;$i=$i+86400){
        $stdate = date('Y-m-d',$i);
        $cmdArr []= "$php cps_stat.php $stdate";
    }
    glog("cps_stat:begin $sttime $etime");
    $ret = gprun($cmdArr,1);
    glog("cps_stat:end $sttime $etime");
    foreach ($ret as $r) {
        $sumCode += $r['retcode'];
        if ($r['retcode']>0) {
            glog(sprintf(":ret = %s cmd = %s",$r['retcode'],$r['cmd']));
            glog($r['output']);
        }
    }
    if ($sumCode>0) {
        glog("something went wrong");
    } else {
        glog("cps_stat done ".date('Y-m-d',$sttime)."  ".date('Y-m-d',$etime));
    }
}

